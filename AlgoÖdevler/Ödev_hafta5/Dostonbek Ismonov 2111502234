public class lesson_2 {
    public static void main(String[] args){

        // merge = iki dizini ayirib sonra birleştirmektir merge matığı bu.
        // 5, 2, 4,  6, 1, 3  
        // onları sol ve sağa boldım 
        // sonra birlaştırdım
        
        int[] dizi = {5, 2, 4, 6, 1, 3};
        mergeSort(dizi);

        for (int i = 0; i < dizi.length; i++) {
            System.out.print(dizi[i] + " ");
        }
    }

    public static void mergeSort(int[] dizi) {
        if (dizi.length <= 1) {
            return;
        }

        int orta = dizi.length / 2;
        int[] solDizi = new int[orta];
        int[] sagDizi = new int[dizi.length - orta];

        for (int i = 0; i < orta; i++) {
            solDizi[i] = dizi[i];
        }

        for (int i = orta; i < dizi.length; i++) {
            sag_dizi[i - orta] = dizi[i];
        }

        mergeSort(sol_dizi);
        mergeSort(sag_dizi);

        merge(sol_dizi, sag_dizi, dizi);
    }

    public static void merge(int[] sol_dizi, int[] sag_dizi, int[] dizi) {
        int i = 0, j = 0, k = 0;

        while (i < sol_dizi.length && j < sag_dizi.length) {
            if (sol_dizi[i] <= sag_dizi[j]) {
                dizi[k++] = sol_dizi[i++];
            } else {
                dizi[k++] = sag_dizi[j++];
            }
        }

        while (i < sol_dizi.length) {
            dizi[k++] = sol_dizi[i++];
        }

        while (j < sag_dizi.length) {
            dizi[k++] = sag_dizi[j++];
        }

    }
}
